# Copyright (c) Mixed Reality Toolkit Contributors
# Licensed under the BSD 3-Clause

parameters:
  - name: UnityVersion
    type: string
    default: Latest

  - name: ProjectName
    type: string
    default: MRTK3 Sample

  - name: CommandLineBuildMethod
    type: string
    default: MixedReality.Toolkit.Examples.Build.BuildApp.StartCommandLineBuild

  - name: PathToProject
    type: string
    default: $(Build.SourcesDirectory)/UnityProjects/MRTKDevTemplate

  - name: RunTests
    type: boolean
    default: false

  - name: Platform
    type: string
    default: None
    values:
      - None
      - Standalone
      - UWP
      - Android

  - name: UnityUsername
    type: string
    default: None

  - name: UnityPassword
    type: string
    default: None

  - name: UnitySerial
    type: string
    default: None

steps:
  - pwsh: Install-Module PowerShellGet -Force
    displayName: Update PowerShellGet

  - pwsh: Install-Module UnitySetup -Scope CurrentUser -Force -AllowPrerelease
    displayName: Install unitysetup.powershell

  - template: Templates/license-unity.yaml@PipelineTools

  - pwsh: Install-Module PowerShellGet -Force
    displayName: Update PowerShellGet

  - pwsh: Install-Module UnitySetup -Scope CurrentUser -Force -AllowPrerelease -RequiredVersion 5.6.161-develop
    displayName: Install unitysetup.powershell

    # Standalone x64 tasks

  - ${{ if eq(parameters.Platform, 'Standalone') }}:
      - template: Tasks/build-unity.yaml
        parameters:
          UnityVersion: ${{ parameters.UnityVersion }}
          BuildTarget: StandaloneWindows64
          CommandLineBuildMethod: ${{ parameters.CommandLineBuildMethod }}
          PathToProject: ${{ parameters.PathToProject }}
          OutputPath: $(Build.ArtifactStagingDirectory)/Apps-${{ parameters.Platform }}/exe-x64/${{ parameters.ProjectName }}.exe
          AdditionalArguments: -EnableCacheServer -cacheServerEndpoint 10.0.3.5 -username ${{ parameters.UnityUsername }} -password ${{ parameters.UnityPassword }} -serial ${{ parameters.UnitySerial }}

    # Run tests early, but don't bother if the standalone build failed.
  - ${{ if eq(parameters.RunTests, true) }}:
      - template: tests.yaml
        parameters:
          UnityVersion: ${{ parameters.UnityVersion }}
          BuildTarget: StandaloneWindows64
          PathToProject: ${{ parameters.PathToProject }}
          AdditionalArguments: -EnableCacheServer -cacheServerEndpoint 10.0.3.5 -noGraphics -username ${{ parameters.UnityUsername }} -password ${{ parameters.UnityPassword }} -serial ${{ parameters.UnitySerial }}

    # UWP tasks

  - ${{ if eq(parameters.Platform, 'UWP') }}:
      - template: Tasks/build-unity.yaml
        parameters:
          UnityVersion: ${{ parameters.UnityVersion }}
          BuildTarget: WSAPlayer
          CommandLineBuildMethod: ${{ parameters.CommandLineBuildMethod }}
          PathToProject: ${{ parameters.PathToProject }}
          OutputPath: $(Agent.TempDirectory)/build/uwp
          AdditionalArguments: -EnableCacheServer -cacheServerEndpoint 10.0.3.5 -username ${{ parameters.UnityUsername }} -password ${{ parameters.UnityPassword }} -serial ${{ parameters.UnitySerial }}

      - pwsh: |
          $manifestPath = "$(Agent.TempDirectory)/build/uwp/${{ parameters.ProjectName }}/Package.appxmanifest"
          ((Get-Content -Path $manifestPath -Raw) -Replace '(<Identity[^\>]*Version=)"[0-9.]+', '$1"$(MRTKVersion).0') | Set-Content -Path $manifestPath -NoNewline
        displayName: Patch UWP AppX version

      - template: Tasks/build-appx.yaml
        parameters:
          ProjectName: ${{ parameters.ProjectName }}
          BuildFolderPath: $(Agent.TempDirectory)/build/uwp
          Architectures: [x64, ARM64]
          Version: $(MRTKVersion)
          TargetFolder: $(Build.ArtifactStagingDirectory)/Apps-${{ parameters.Platform }}

    # Android tasks

  - ${{ if eq(parameters.Platform, 'Android') }}:
      - template: Tasks/build-unity.yaml
        parameters:
          UnityVersion: ${{ parameters.UnityVersion }}
          BuildTarget: Android
          CommandLineBuildMethod: ${{ parameters.CommandLineBuildMethod }}
          PathToProject: ${{ parameters.PathToProject }}
          OutputPath: $(Build.ArtifactStagingDirectory)/Apps-${{ parameters.Platform }}/apk/${{ parameters.ProjectName }}.apk
          AdditionalArguments: -EnableCacheServer -cacheServerEndpoint 10.0.3.5 -username ${{ parameters.UnityUsername }} -password ${{ parameters.UnityPassword }} -serial ${{ parameters.UnitySerial }}

    # Publishing tasks

  - ${{ if not(eq(parameters.Platform, 'None')) }}:
      - task: PublishPipelineArtifact@1
        displayName: Publish apps
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)/Apps-${{ parameters.Platform }}
          artifactName: Apps-${{ parameters.ProjectName }}-${{ parameters.Platform }}
